#ifndef FUNC_TESTS_H_
#define FUNC_TESTS_H_

#include <string.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <stdbool.h>

double polish(char *str);
double notation(char *str);
int check_first_symobol(char first_symbol);
int prior_comparison(char first, char second);
int determine_priority(char operation);
bool oper_find(char *str, int i);
double math_nums(double first, double second, char operation);
void trigonometry(double *number, char operation);
void bracket_close(double *nums, char *oper, int *n_count, int *o_count);
void math_in_condition(double *nums, char *oper, int *n_count, int *o_count);



void test();
char examples[][200] = {"(((1.123*213.5555-((217.12354))*1/2)/4/6*(5632.57-123.344)/(23.12346)/(4.213*(((653.13*(14.123*121.2345+2/(23.123+9*0.213))))/((237.12*21.8888))/(1.888+92.14)))))",
    "((2*3)-(4/2))",
    "324.14*(10+5)/(2*3)",
    "(((1.5*2)/3)-((4-2)*1))",
    "((6/2)+(4*2))",
    "((8-2)*(3+1))/4",
    "0.04230*(((12/3)*2)-5)",
    "(((2.5*3)/(1.5-0.5))-((4/2)+1))",
    "((10*(2/5))+((3-1)*(8/2)))",
    "((20/4)*(5-(3/1.5)))",
    "(((15*2)/(3+2))-(7*0.5))",
    "((6.213*(2.552-1.312))/(3.321-(2.423/4.1123)))",
    "0.09000012*(((18.435/3.432)+2.412)*(4.8324-1.2432))",
    "((9.756+(7/2.756))*(4.253-(3.142/1.523)))",
    "(((12/2)+(5*1.5))/(3-1))",
    "325.5324*(((2.5432*3.432)/(1342.5-10.5324))-((44325.11123/2324.234)+1.234))/(3.234-((2.7568*1.5234)+0.5324))",
    "((10.00032*(223.21/5.214))+((23.53-1.321)*(2123.8/2.5326)))/(1.3412+(2123.52/(3321.234-1.41142)))",
    "((2.2340/43.541)*(5.1325-(3.3214/14.5231)))/((31.22*31.5321)-(141.52/103.5324))",
    "(((132.5*232.4)/(34.32+423.2))-(74.32*30.5432))*(432.4/(243.24-14.52))",
    "((64.57*(2774.5-165.445))/(353.4678-(276.9354/43.456)))+(57.65-(323.5/1.3425))",
    "(((189.67/423.3)+2.34)*(46.34/6.348-1634.2))/((25.343*0.63465)+(54.371/50543.55))", 
    "235-((953.26+(763.24/432.432))*(45.66-(39.78/1978.995)))-(9792.995/(9780.5978*2789.5234))", 
    "634*(((1234.45232/2.2354)+(5123.324*1241.2355))/(235.553-142.71))+(2346.26*(1423.525/10432.3255))", 
    "(((5232.555*3876.8768)/(107.578-0078.0785))-((70784.78/50782.807)+4321.67))/(13.42-((532.2253*1523.5523)+5230.3255))",
    "((137610.432*(2234.532/5.643))+((34.23423-521.42365)*(5238.523/62.325)))/(4571.2345+(252.253/(5233.523-1523.745)))",
    "328*(253*(203.41/44.32)*(5.3214-(142.3/1532.5532)))/((25.23*4231.53254)-(11.2/4350.5325))",
    "(((1432.22345*532.652)/(3.324234+423.4322))-(741.4132*0.5432))*(4324.234/(232.1234-1324.325))",
    "34*((631543.151*(253154.124-1532.12521))/(3235.124353-(2532.1241/452.432)))+(535.21354-(32314.123/15342.342))",
    "((18235.352/3.5322)+2325/1214.41)*(434.8-321.3252)",
    "0.321*((9324.235+(5432.7/3254.662))*(4432.11-(423.143/1423.3245)))-(25324.5111/(324.5412*213.24))",
    "(((12324.342/2342.234)+(342.4325*154.65))/(876.3-3451))+(2534.543*(1234.655/320.542))",
    "(((((4342.8675*5463)/(4231.4325-0.3245))-((44234.412/582)+1376))/(3654-((543.2*1345.5543)+0.5543)))*(5326543/(2645.658765-1654)))+(12563/((3654.576*2564)+(1342.56/23450.5)))",
    "(((1630*(2234/54325))+((4233-4234321)*(823423/3452)))/(145+(234.2341/(356.4612-1543.3234))))*((454.3345-(3534.543/4321.5432))-(5432.3524/(2435*0.532442)))",
    "(((26340/4634)*(6345-(3643/6341.6345)))/((5672*19786.55324)-(1234/7560.7565)))*(3423-((2432*13546.3425)+4320.524))",
    "324.5342*((((15365*3242)/(3654+2243))-(2347*43210.54435))*(57764/(243242-7561)))/(1432+(6542/(3654-1423654)))",
    "(((65324*(2654.5645-6541))/(3654234-(2234/4345)))+(5747-(3534/561.5345)))*(5432-((6541/4230.4325)+(4232*1654.655)))",
    "((((13428/3432)+76542)*(45432.8243-6341.2634))/((6432*5430.635)+(5431/5430.5435)))+(3457/(4323*4322))",
    "(((967575+(744234/2352))*(4765-(3765/13234.5224)))-(4322.4325/(210423.5*3422)))*((6534.51+(321/(311-11.35423)))/(414.5234-(3.42342/35421.12355)))",
    "((((134.52/23421)+(5324.78*1665.5342))/(423.4323-1323))+(236*(51.552354/0.5324)))/(54536/(14.142-11.4132))",
// SINUS
    "s(((1432.35*24.3)/(34/3+24/43-23))-s(7324.35*0.5))",
    "s((6.213*(2.552-1.312))/(3.321-(2.423/4.1123)))",
    "s(0.09000012*((s(18.435/3.432)+2.412)*(4.8324-s(1.2432))))",
    "s(((12/2)+(5*s(1.5)*24))/(3324.132-1.32523))",
    "s(325.5324*(((2.5432*3.432)/(1342.5-10.5324))-s((44325.11123/2324.234)+1.234))/(3.234-((2.7568*1.5234)+0.5324))",
// COSINUS
    "c(((65324*(2654.5645-6541))/(3654234-(2234/4345)))+(5747-(c(3534/561.5345))))*(5432-((6541/4230.4325)+(4232*1654.655)))",
    "c((((13428/3432)+76542)*(45432.8243-6341.2634))/((6432*5430.635)+(5431/5430.5435)))+(3457/(4323*4322))",
    "c(((967575+(744234/2352))*(4765-(3765/13234.5224)))-(4322.4325/(210423.5*3422)))*((6534.51+(c(321/(311-11.35423))))/(414.5234-(3.42342/35421.12355)))",
    "c((((134.52/23421)+(5324.78*1665.5342))/(423.4323-1323))+(236*(c(51.552354/0.5324))))/(54536/(14.142-11.4132))",
    "c(((26340/4634)*(6345-(3643/6341.6345)))/((5672*19786.55324)-(1234/7560.7565)))*(3423-((2432*13546.3425)+4320.524))",
// TANGENS
    "t(((s(45)*c(30))/2)-(t(12.34)/(c(2.55)-1.32)))",
    "t((s(2.5*c(30)))-(t(2.34)*c(1.23)))",
    "t(((s(0.5)*c(60))/(c(45)+t(30)))-(t(15.5)/(c(12.34)-s(7.65))))",
    "t(((s(1.5)*c(75))/c(0.5))-(t(45.67)/(c(2.55)-1.32)))",
    "t((s(23)*c(11.5))-(t(34.12)*c(1.23)))*S(((6.213*(2.552-1.312))/(3.321-(2.423/4.1123)))/3)*S(((6.213*(2.552-1.312))/(3.321-(2.423/4.1123)))/3)",
// ARCSINUS
    "(((S(0.54321)*C(0.3245+321/1284))/C((45.14123/124766+321/1545)*41.421/4327.34)+T(35432.253))-(T(154.5324)/(C(142.34/10327)-S(7.65/102))))",
    "C((S(C(0.2141)/123))/54.32)*(C(0.375)/C(0.5))-(T(43245.67)/(C(0.432455)-0.0032))",
    "S(0.123*(S(0.999)*C(0.9995)))+(T(34.12)*C(0.4323))",
    "T(C(S(1.43/1432.35*24.3)/(34/3+24/43-23))-S(7324.35*0.00005))",
    "S(((6.213*(2.552-1.312))/(3.321-(2.423/4.1123)))/3)",
    "S((0.09000012*((S(18.435/341.432)+2.412)*(4.8324-S(1.2432/123+0.0532))))-1)",
    "S(((12/2)+(5*S(1.5/123*0.00043)*24))/(3324.132-1.32523))",
    "S((325.5324*(((2.5432*3.432)/(1342.5-10.5324))-S((44325.11123/233324.234)+0.00234))/(3.234-((2.7568*1.5234)+0.5324))/49.13278)",
    "S(((((((C(6524*(264.5645-651)/1236345573.3245)/(365234-(234/435)))+(5747-(C(353.4/561.535))))*(5432-((6541/4230.4325)+(422*164.655))))+T(45.67*2*52))/(C(2.55/100)-0.21332)))/100000/100000)",
    "S((((13428/3432)+76542)*(C((45432.8243-6341.2634)/3274652.3214))/((6432*5430.635)+(5431/5430.5435)))+(3457/(4323*4322)))",
};
double results[200] = {134.9724794,
    4,
    810.35,
    -1,
    11,
    6,
    0.1269,
    4.5,
    12,
    15,
    2.5,
    2.8201707,
    2.5142929,
    26.9276375,
    6.75,
    4410.7283872,
    9618.2220848,
    0.0002559,
    -4164.1875583,
    302.0435041,
    -281.9966313,
    -43352.2445327,
    43429718.6498388,
    -0.8373447,
    11911.3624497,
    18.6523313,
    -5483.0053878,
    1672983604.3376084,
    586042.7741192,
    13267141.7418253,
    9741.9137914,
    -30.6888969,
    -3131029812.3403456,
    -10586.2740029,
    -5632720.3242443,
    -39682001894.7131811,
    85.6661585,
    72710793992.8514384,
    0.6501349,
// SINUS
    0.3083056,
    0.3159159,
    0.5371299,
    0.0378202,
    0.7141400,
// COSINUS
    6613209.0203623,
    -0.6650618,
    -10.3282995,
    0.0000414,
    -32945600.7831832,
// TANGENS
    -0.0415193,
    0.8795198,
    -0.0818952,
    0.2330890,
    -0.3860057,
// ARCFUNCS
    0.8661435,
    0.3773723,
    1.7381995,
    0.8752538,
    1.2227971,
    0.0584861,
    0.0018058,
    0.9735264,
    -0.027636,
    0.0036011,
};

#endif